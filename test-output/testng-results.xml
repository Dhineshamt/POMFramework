<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="0" ignored="0" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="6209" started-at="2017-09-11T18:26:39Z" finished-at="2017-09-11T18:26:45Z">
    <groups>
      <group name="smoke">
        <method signature="TC001_CreateLead.createLead(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.TC001_CreateLead@4fe3c938]" name="createLead" class="testCases.TC001_CreateLead"/>
      </group> <!-- smoke -->
    </groups>
    <test name="Default test" duration-ms="6209" started-at="2017-09-11T18:26:39Z" finished-at="2017-09-11T18:26:45Z">
      <class name="testCases.TC001_CreateLead">
        <test-method status="PASS" signature="startResult()[pri:0, instance:testCases.TC001_CreateLead@4fe3c938]" name="startResult" is-config="true" duration-ms="2935" started-at="2017-09-11T23:56:36Z" finished-at="2017-09-11T23:56:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startResult -->
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:testCases.TC001_CreateLead@4fe3c938]" name="beforeSuite" is-config="true" duration-ms="571" started-at="2017-09-11T23:56:39Z" depends-on-methods="utils.Reporter.startResult" finished-at="2017-09-11T23:56:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testCases.TC001_CreateLead@4fe3c938]" name="beforeTest" is-config="true" duration-ms="16" started-at="2017-09-11T23:56:39Z" finished-at="2017-09-11T23:56:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="setData()[pri:0, instance:testCases.TC001_CreateLead@4fe3c938]" name="setData" is-config="true" duration-ms="0" started-at="2017-09-11T23:56:39Z" finished-at="2017-09-11T23:56:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setData -->
        <test-method status="FAIL" signature="beforeMethod()[pri:0, instance:testCases.TC001_CreateLead@4fe3c938]" name="beforeMethod" is-config="true" duration-ms="4313" started-at="2017-09-11T23:56:41Z" finished-at="2017-09-11T23:56:45Z">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[FAILED]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: FAILED
	at utils.Reporter.reportStep(Reporter.java:49)
	at wrappers.GenericWrappers.invokeApp(GenericWrappers.java:122)
	at wrappers.GenericWrappers.invokeApp(GenericWrappers.java:83)
	at wrappers.LeafTapsWrappers.beforeMethod(LeafTapsWrappers.java:36)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:523)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:224)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:599)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="createLead(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.TC001_CreateLead@4fe3c938]" name="createLead" duration-ms="0" started-at="2017-09-11T23:56:45Z" data-provider="fetchData" finished-at="2017-09-11T23:56:45Z">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[FAILED]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: FAILED
	at utils.Reporter.reportStep(Reporter.java:49)
	at wrappers.GenericWrappers.invokeApp(GenericWrappers.java:122)
	at wrappers.GenericWrappers.invokeApp(GenericWrappers.java:83)
	at wrappers.LeafTapsWrappers.beforeMethod(LeafTapsWrappers.java:36)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:523)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:224)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:599)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createLead -->
        <test-method status="SKIP" signature="afterTest()[pri:0, instance:testCases.TC001_CreateLead@4fe3c938]" name="afterTest" is-config="true" duration-ms="0" started-at="2017-09-11T23:56:45Z" finished-at="2017-09-11T23:56:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="SKIP" signature="afterSuite()[pri:0, instance:testCases.TC001_CreateLead@4fe3c938]" name="afterSuite" is-config="true" duration-ms="0" started-at="2017-09-11T23:56:46Z" finished-at="2017-09-11T23:56:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method status="SKIP" signature="endResult()[pri:0, instance:testCases.TC001_CreateLead@4fe3c938]" name="endResult" is-config="true" duration-ms="0" started-at="2017-09-11T23:56:46Z" depends-on-methods="wrappers.LeafTapsWrappers.afterSuite" finished-at="2017-09-11T23:56:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endResult -->
      </class> <!-- testCases.TC001_CreateLead -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
